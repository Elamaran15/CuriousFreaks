package org.code.designPatterns.creational.singleton;


/*
‚úÖ Pros:
‚úî Thread-safe
‚úî Lazy initialization
‚ùå Cons:
‚úñ Slow performance (synchronization adds overhead on every call).


üî¥ Problem: Even after the instance is created, synchronization adds unnecessary overhead.
 */
public class SynchronizedMethodSingleton {

    private static SynchronizedMethodSingleton INSTANCE;

    private SynchronizedMethodSingleton(){}

    public static synchronized SynchronizedMethodSingleton getInstance(){
        if(INSTANCE==null)
            INSTANCE=new SynchronizedMethodSingleton();

        return INSTANCE;
    }
}
